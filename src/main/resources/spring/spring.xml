<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
	">


    <!-- 载入常用的配置 -->
    <context:property-placeholder location="classpath:db.properties,classpath:druid.properties"/>
    <!-- 注解扫描所有包 -->
    <context:component-scan base-package="com.pramy"/>


    <context:annotation-config/>


    <!--扫描缓存注解-->

    <!-- 创建数据源 并且使用proxool数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">

        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${druid.maxWait}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>

        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${druid.filters}"/>

    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 使用xml配置，自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 使用mapper注解方式 自动扫描接口注解 -->
        <property name="basePackage" value="com.pramy.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--&lt;!&ndash;声明事务管理器&ndash;&gt;-->

    <!--<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;<tx:annotation-driven transaction-manager="txManager"/>&ndash;&gt;-->
    <!--<tx:advice id="interceptor" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="=select*" read-only="true" />-->
            <!--<tx:method name="add"/>-->
            <!--<tx:method name="delete"/>-->
            <!--<tx:method name="update"/>-->
            <!--<tx:method name="total"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
        <!--<aop:config>-->
            <!--<aop:pointcut id="daoPointCut" expression="execution(* com.pramy.service.lmp.*.*(..))"/>-->
            <!--<aop:advisor advice-ref="interceptor" pointcut-ref="daoPointCut"/>-->
        <!--</aop:config>-->

    <!--事务管理 end-->

    <!--&lt;!&ndash;cache 基于Ehcache&ndash;&gt;-->
    <!--<cache:annotation-driven cache-manager="cacheManager"/>-->
    <!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">-->
        <!--<property name="cacheManager" ref="cache"/>-->
    <!--</bean>-->
    <!--<bean id="cache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
        <!--<property name="configLocation" value="classpath:ehcache.xml"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;cache end&ndash;&gt;-->
</beans>