<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pramy.dao.UserMapper">
  <!--开启ehcache缓存-->
  <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache" />-->

  <resultMap id="BaseResultMap" type="com.pramy.model.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="question" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creat_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="last_login_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="is_limit" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="level" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="experience" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_password, email, sex, question, answer, creat_time, last_login_time, 
    is_limit, level, experience
  </sql>
  <select id="selectByUserName" parameterType="com.pramy.model.User" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName}
  </select>
  <select id="selectByPrimaryKey" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id}
  </select>
  <select id="selectCount" parameterType="com.pramy.model.User" resultType="int">
    SELECT COUNT(*) FROM  user
    <where>
      <if test="userName!=null">
        <trim prefix="(" prefixOverrides="or" suffix=")" >
          or user_name like concat(concat('%',#{userName}),'%')
          or email like concat(concat('%',#{userName}),'%')
          or sex like concat(concat('%',#{userName}),'%')
          or question like concat(concat('%',#{userName}),'%')
          or answer like concat(concat('%',#{userName}),'%')
          or creat_time like concat(concat('%',#{userName}),'%')
          or last_login_time like concat(concat('%',#{userName}),'%')
          or is_limit like concat(concat('%',#{userName}),'%')
          or level like concat(concat('%',#{userName}),'%')
          or experience like concat(concat('%',#{userName}),'%')
        </trim>
      </if>
    </where>
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    SELECT  * FROM user
    <where>
      <if test="user.userName!=null ">
        <trim prefix="(" prefixOverrides="or" suffix=")" >
          or user_name like concat(concat('%',#{user.userName}),'%')
          or email like concat(concat('%',#{user.userName}),'%')
          or sex like concat(concat('%',#{user.userName}),'%')
          or question like concat(concat('%',#{user.userName}),'%')
          or answer like concat(concat('%',#{user.userName}),'%')
          or creat_time like concat(concat('%',#{user.userName}),'%')
          or last_login_time like concat(concat('%',#{user.userName}),'%')
          or is_limit like concat(concat('%',#{user.userName}),'%')
          or level like concat(concat('%',#{user.userName}),'%')
          or experience like concat(concat('%',#{user.userName}),'%')
        </trim>
      </if>
    </where>
    ORDER BY creat_time desc
    <if test="page.pageSize!=0">
      limit #{page.index} , #{page.pageSize}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{t.id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pramy.model.User">
    insert into user (id, user_name, user_password, 
      email, sex, question, 
      answer, creat_time, last_login_time, 
      is_limit, level, experience
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{isLimit,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{experience,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pramy.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="isLimit != null">
        is_limit,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="experience != null">
        experience,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLimit != null">
        #{isLimit,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pramy.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLimit != null">
        is_limit = #{isLimit,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pramy.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      is_limit = #{isLimit,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      experience = #{experience,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>